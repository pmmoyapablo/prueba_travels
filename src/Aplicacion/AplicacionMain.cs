///////////////////////////////////////////////////////////
//  Aplicacion.cs
//  Implementation of the Class Aplicacion
//  Generated by Enterprise Architect
//  Created on:      12-feb.-2024 15:00:58
//  Original author: pmmoy
///////////////////////////////////////////////////////////


using Dominio;

namespace Aplicacion {
	public class AplicacionMain {

		private readonly IClienteRepositorio _clienteRepositorio;
		private readonly IVehiculoRepositorio _vehiculoRepositorio;
		private readonly IReservaRepositorio _reservaRepositorio;
		private readonly IMedioPagoRepositorio _medioPagoRepositorio;

		public AplicacionMain(
		IClienteRepositorio clienteRepositorio,
		IVehiculoRepositorio vehiculoRepositorio,
		IReservaRepositorio reservaRepositorio,
		IMedioPagoRepositorio medioPagoRepositorio){
   
			_clienteRepositorio = clienteRepositorio;
			_vehiculoRepositorio = vehiculoRepositorio;
			_reservaRepositorio = reservaRepositorio;
			_medioPagoRepositorio = medioPagoRepositorio;

    }

		public Repuesta<Vehiculo[]> ListarVehiculos(){

      var response = new Repuesta<Vehiculo[]>();
      try
      {
        var vehiculos = _vehiculoRepositorio.ListarTodos().Where(v => v.IsDisponible = true).ToArray();
        
        response.Dato = vehiculos;

        if (response.Dato != null)
        {
          response.IsValida = true;
          response.Mensaje = "Consulta Exitosa!!!";
        }

      }
      catch (Exception ex)
      {
        response.Mensaje = ex.Message;
      }

      return response;
    }

		/// 
		/// <param name="cliente"></param>
		public Repuesta<Cliente> ConsignarDatosCliente(ClienteDto dto){

      var response = new Repuesta<Cliente>();
      try
      {
        //Validate on Domain
        var clientePersiter = new Cliente();
        clientePersiter.Nombres = dto.Nombres;
        clientePersiter.Documento = dto.Documento;
        clientePersiter.Edad = dto.Edad;
        clientePersiter.Direccion = dto.Direccion;
        clientePersiter.Ciudad = dto.Ciudad;
        clientePersiter.Email = dto.Email;
        clientePersiter.Telefono = dto.Telefono;

        //Persitencia
        _clienteRepositorio.Crear(clientePersiter);

        response.Dato = clientePersiter;
        response.IsValida = true;
        response.Mensaje = "Registro Exitoso!!!";

      }
      catch (Exception e)
      {
        response.Mensaje = e.Message;
      }
      return response;
    }

		/// 
		/// <param name="vehiculos"></param>
		public Repuesta<int> DefinirPreferencias(PreferenciasDto dto){

      var response = new Repuesta<int>();
      try
      {

        //Busqueda
        var cliente = _clienteRepositorio.Detallar(dto.ClienteId);

        if (cliente == null)
        {
          response.Dato = 400;
          response.IsValida = false;
          response.Mensaje = "No se encontro el cliente con el identidicador: " + dto.ClienteId;
        }
        else
        {
          cliente.UpdatePreferencias(dto.Vehiculos);
          response.Dato = 203;
          response.IsValida = true;
          response.Mensaje = "Actualización Exitosa!!!";
        }

      }
      catch (Exception e)
      {
        response.Mensaje = e.Message;
      }
      return response;
    }

		/// 
		/// <param name="mediosPagos"></param>
		/// <param name="vehiculo"></param>
		/// <param name="cliente"></param>
		public Repuesta<Reserva> ReservarVehiculo(ReservaDto dto)
    {
      var response = new Repuesta<Reserva>();
      try
      {
        //Validate on Domain
        var newReserva = new Reserva();
        dto.Vehiculo.IsDisponible = false;
        newReserva.VehiculoInv = dto.Vehiculo;
        newReserva.ClienteInv = dto.Cliente;
        newReserva.Pago = dto.Pago;
        newReserva.FechaInicio = dto.FechaInicio;
        newReserva.FechaFin = dto.FechaFin;
        newReserva.Estatus = (int)EstadosReserva.Iniciada;
        newReserva.CalcularMonto();

        //Persitencia
        _reservaRepositorio.Crear(newReserva);
        _vehiculoRepositorio.Actualizar(dto.Vehiculo, dto.Vehiculo.Id);

        response.Dato = newReserva;
        response.IsValida = true;
        response.Mensaje = "Registro Exitoso!!!";

      }
      catch (Exception e)
      {
        response.Mensaje = e.Message;
      }
      return response;
    }

		/// 
		/// <param name="reserva"></param>
		public Repuesta<int> ActualizarReserva(String reservaId,  int estatus){

      var response = new Repuesta<int>();
      try
      {
        //Busqueda
        var reservaRecord = _reservaRepositorio.Detallar(reservaId);

        if (reservaRecord == null)
        {
          response.Dato = 400;
          response.IsValida = false;
          response.Mensaje = "No se encontro la reserva con el identidicador: " + reservaId;
        }
        else
        {
          reservaRecord.Estatus = estatus;

          response.Dato = 203;
          response.IsValida = true;
          response.Mensaje = "Actualización Exitosa!!!";
        }

      }
      catch (Exception e)
      {
        response.Mensaje = e.Message;
      }
      return response;
    }

		/// 
		/// <param name="cliente"></param>
		public Repuesta<Itinerario[]> ConsultarItinerarios(String clienteId, DateTime desde, DateTime hasta){

      var response = new Repuesta<Itinerario[]>();
      try
      {
        var itinerarios = new List<Itinerario>();
        var vehiculos = _vehiculoRepositorio.ListarTodos().Where(v => v.IsDisponible = true).ToArray();

        var cliente = _clienteRepositorio.Detallar(clienteId);

        if (cliente == null)
        {
          response.IsValida = false;
          response.Mensaje = "No se encontro el cliente con el identidicador: " + clienteId;
        }
        else
        {
          foreach (var v in vehiculos)
          {
            var newReserva = new Reserva();
            newReserva.VehiculoInv = v;
            newReserva.ClienteInv = cliente;   
            newReserva.FechaInicio = desde;
            newReserva.FechaFin = hasta;
            newReserva.CalcularMonto();

            var itinerario = new Itinerario();
            itinerario.Monto = newReserva.MontoTotal;
            TimeSpan difFechas = hasta - desde;
            itinerario.Dias = difFechas.Days;
            itinerario.VehiculoInt = v;
            itinerario.ClienteInt = cliente;

            itinerarios.Add(itinerario);
          }

          response.Dato = itinerarios.ToArray();
          response.IsValida = true;
          response.Mensaje = "Consulta Exitosa!!!";
        }          
      }
      catch (Exception ex)
      {
        response.Mensaje = ex.Message;
      }

      return response;
    }

    public Repuesta<Reserva[]> ListarAlgunasReservas(int estatus)
    {

      var response = new Repuesta<Reserva[]>();
      try
      {
        var reservas = _reservaRepositorio.ListarTodos().Where(r => r.Estatus == estatus).ToArray();

        response.Dato = reservas;

        if (response.Dato != null)
        {
          response.IsValida = true;
          response.Mensaje = "Consulta Exitosa!!!";
        }

      }
      catch (Exception ex)
      {
        response.Mensaje = ex.Message;
      }

      return response;
    }

  }//end Aplicacion

}//end namespace Aplicacion