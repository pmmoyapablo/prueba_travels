///////////////////////////////////////////////////////////
//  RepositorioBaseEFT.cs
//  Implementation of the Class RepositorioBaseEF<T>
//  Generated by Enterprise Architect
//  Created on:      12-feb.-2024 15:04:01
//  Original author: pmmoy
///////////////////////////////////////////////////////////


using Aplicacion;
using Dominio;
using Microsoft.EntityFrameworkCore;

namespace Infraestructura {
	public class RepositorioBaseEF<T> : IRepositorioBase<T> where T : Entidad {

		protected readonly Context _context;

		public RepositorioBaseEF(Context context){
			_context = context;
		}


		/// 
		/// <param name="entidad"></param>
		public void Crear(T entidad){
      _context.Set<T>().Add(entidad);
      _context.SaveChanges();
    }

		/// 
		/// <param name="entidad"></param>
		/// <param name="id"></param>
		public void Actualizar(T entidad, String id){
      _context.Entry(entidad).State = EntityState.Modified;
      _context.SaveChanges();
    }

		/// 
		/// <param name="id"></param>
		public void Borrar(String id){
      var entity = _context.Set<T>().Find(id);

      if (entity == null)
        throw new Exception("No existe entidad con id = " + id);

      _context.Set<T>().Remove(entity);
      _context.SaveChanges();
    }

		/// 
		/// <param name="id"></param>
		public T Detallar(String id){

      var query = _context.Set<T>().Where(entity => entity.Id == id);

      return query.Any() ? query.First() : null;
    }

		public T[] ListarTodos(){

      var entidades = _context.Set<T>().ToList();

      return entidades.Any() ? entidades.ToArray() : new List<T>().ToArray();
    }


	}//end RepositorioBaseEF<T>

}//end namespace Infraestructura