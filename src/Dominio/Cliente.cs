///////////////////////////////////////////////////////////
//  Cliente.cs
//  Implementation of the Class Cliente
//  Generated by Enterprise Architect
//  Created on:      12-feb.-2024 14:58:12
//  Original author: pmmoy
///////////////////////////////////////////////////////////


namespace Dominio {

  public class Cliente : Entidad {

    private String documento;
    private String nombres;
    private int edad;
    private String email;
    private String direccion;
    private String ciudad;
    private String telefono;

    public String Documento { get => documento; set { ExcepcionDominio.LanzarCuando(string.IsNullOrEmpty(value), "Documento inválido"); documento = value; } }
		public String Nombres { get => nombres; set { ExcepcionDominio.LanzarCuando(string.IsNullOrEmpty(value), "Nombres inválidos"); nombres = value; } }
    public int Edad { get => edad; set { ExcepcionDominio.LanzarCuando(value < 18, "Edad no permitida"); edad = value; } }
    public String Email { get => email; set { ExcepcionDominio.LanzarCuando(string.IsNullOrEmpty(value), "Email inválido"); email = value; } }
    public String Direccion { get => direccion; set { ExcepcionDominio.LanzarCuando(string.IsNullOrEmpty(value), "Dirección inválida"); direccion = value; } }
    public String Ciudad { get => ciudad; set { ExcepcionDominio.LanzarCuando(string.IsNullOrEmpty(value), "Ciudad inválida"); ciudad = value; } }
    public String Telefono { get => telefono; set { ExcepcionDominio.LanzarCuando(string.IsNullOrEmpty(value), "Teléfono inválido"); telefono = value; } }

    private Vehiculo[] Preferencias { get; set; }

		public Cliente(){
      Preferencias = new Vehiculo[] { };
		}

    public void UpdatePreferencias(Vehiculo[] preferencias) {  
      Preferencias = preferencias; 
    }

    public Vehiculo[] GetPreferencias() { return Preferencias; }

  }//end Cliente

}//end namespace Dominio